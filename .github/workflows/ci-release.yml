name: Release Continuos Integration

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  contexts_logs:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
      - name: Dump job context
        run: echo '${{ toJSON(job) }}'
      - name: Dump steps context
        run: echo '${{ toJSON(steps) }}'
      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'
      - name: Dump strategy context
        run: echo '${{ toJSON(strategy) }}'
      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}'

  test-stage:
    runs-on: ubuntu-latest
    steps:
#      - uses: actions/checkout@v2
#      - name: Use Node.js 12.14.1
#        uses: actions/setup-node@v1
#        with:
#          node-version: 12.14.1
#      - name: Get Node_Modules cache directory
#        id: npm-cache
#        run: |
#          echo "::set-output name=dir::$(npm config get cache)"
#      - uses: actions/cache@v2
#        with:
#          path: ${{ steps.npm-cache.outputs.dir }}
#          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-node-
#      - name: Install dependencies
#        run: yarn install
      - name: Run Test pre Build Image
        run: echo 'Done!'

  build-stage:
    if: github.event_name == 'push'
    needs: test-stage
    name: Build and push Docker Images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Container registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}      
      - name: Set Repository Name
        run: echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*\/}" >> $GITHUB_ENV
      - name: Set version image
        run: echo "GHCR_IMAGE_VERSION=${GITHUB_REF_NAME#*\/}" >> $GITHUB_ENV
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/${{ env.REPOSITORY_NAME }}:${{ env.GHCR_IMAGE_VERSION }}
            ghcr.io/${{ github.repository_owner }}/${{ env.REPOSITORY_NAME }}:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  create-github-release-stage:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-stage
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create Release
        run: gh release create ${{ github.ref }} --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
