# This is a basic workflow to help you get started with Actions

name: Developer Continuos Integration

# Controls when the workflow will run
on: 
  pull_request:
    # Sequence of patterns matched against refs/heads
    branches:
      - developer
  push:
    # Sequence of patterns matched against refs/heads
    branches:
      - developer

jobs:
  dump_contexts_to_log:
    runs-on: ubuntu-latest
    steps:
      - name: Set env
        run: echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*\/}" >> $GITHUB_ENV
      - name: Echo REPOSITORY_NAME
        run: echo $REPOSITORY_NAME
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
      - name: Dump job context
        run: echo '${{ toJSON(job) }}'
      - name: Dump steps context
        run: echo '${{ toJSON(steps) }}'
      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'
      - name: Dump strategy context
        run: echo '${{ toJSON(strategy) }}'
      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}'
#  BuildDockerImage:
#    name: Build and push Docker Images
#    runs-on: ubuntu-latest
#    steps:
#      - name: Set repositoryName
#        run: echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*\/}" >> $GITHUB_ENV
#      - uses: actions/checkout@v2
#      - name: Set up QEMU
#        uses: docker/setup-qemu-action@v1
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#      - name: Login to DockerHub
#        uses: docker/login-action@v1 
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Build and push
#        id: docker_build
#        uses: docker/build-push-action@v2
#        with:
#          push: true
#          platforms: linux/amd64,linux/arm64
#          tags:
#            - ghcr.io/${{ github.repository_owner }}/$REPOSITORY_NAME:developer
#      - name: Image digest
#        run: echo ${{ steps.docker_build.outputs.digest }}
