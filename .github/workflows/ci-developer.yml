name: Developer Continuos Integration

on: 
  push:
    branches:
      - developer 
  pull_request:
    branches:
      - developer

jobs:
  developer-app-version-stage:
    name: Update app verion on pull_request release/hotfix
    if: ${{ (github.event.pull_request.merged == true && github.event.action == 'closed' && (startsWith(github.head_ref, 'release/') || startsWith(github.head_ref, 'hotfix/'))) }}
    needs: test-stage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set version image
        run: echo "GHCR_IMAGE_VERSION=${GITHUB_REF_NAME#*\/}" >> $GITHUB_ENV
      - name: Setup Git
        run: |
          git config user.name ${{ github.actor }}
          git config user.email ${{ github.actor }}@users.noreply.github.com
      - name: Set app version
        run: npm version ${{ env.GHCR_IMAGE_VERSION }} -m "Upgrade app version to ${{ env.GHCR_IMAGE_VERSION }}"
      - name: Push latest app version
        run: |
          git pull
          git push origin developer

  test-stage:
    name: Test stage pre build
    if: ${{ always() }}
    needs: [developer-app-version-stage]
    runs-on: ubuntu-latest
    steps:
#      - uses: actions/checkout@v2
#      - name: Use Node.js 12.14.1
#        uses: actions/setup-node@v1
#        with:
#          node-version: 12.14.1
#      - name: Get Node_Modules cache directory
#        id: npm-cache
#        run: |
#          echo "::set-output name=dir::$(npm config get cache)"
#      - uses: actions/cache@v2
#        with:
#          path: ${{ steps.npm-cache.outputs.dir }}
#          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-node-
#      - name: Install dependencies
#        run: yarn install
      - name: Run Test pre Build Image
        run: echo 'Done!'

  build-stage:
    name: Build and push Docker Images
    if: github.event_name == 'push'
    needs: test-stage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Container registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}      
      - name: Set Repository Name
        run: echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*\/}" >> $GITHUB_ENV
      - name: Build and push
        id: docker_build
        run: echo "Build Done! -----> ghcr.io/${{ github.repository_owner }}/${{ env.REPOSITORY_NAME }}:developer"
#        uses: docker/build-push-action@v2
#        with:
#          push: true
#          platforms: linux/amd64,linux/arm64
#          tags: ghcr.io/${{ github.repository_owner }}/${{ env.REPOSITORY_NAME }}:developer
#      - name: Image digest
#        run: echo ${{ steps.docker_build.outputs.digest }}
